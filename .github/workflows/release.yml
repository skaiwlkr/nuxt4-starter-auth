name: Create Release on main merge

on:
  push:
    branches:
      - main

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest tag
        id: get_tag
        run: |
          # Fetch all tags from remote to ensure we have the latest
          git fetch --tags
          # Get all tags, filter only release tags (not alpha/beta), sort and get the latest
          latest_tag=$(git tag -l | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -1)
          if [ -z "$latest_tag" ]; then
            latest_tag="v0.0.0"
          fi
          echo "Latest tag: $latest_tag"
          echo "tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump_version
        run: |
          old=${{ steps.get_tag.outputs.tag }}
          echo "Old version: $old"
          # Extract version parts
          v="${old#v}"
          IFS='.' read -r major minor patch <<< "$v"
          patch=$((patch + 1))
          new_tag="v$major.$minor.$patch"
          echo "New tag: $new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Create Git tag
        run: |
          new_tag=${{ steps.bump_version.outputs.new_tag }}
          # Check if tag already exists
          if git rev-parse "$new_tag" >/dev/null 2>&1; then
            echo "Tag $new_tag already exists! Skipping tag creation."
            exit 1
          fi
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag $new_tag
          git push origin $new_tag

      - name: Update package.json version
        run: |
          version=${{ steps.bump_version.outputs.new_tag }}
          version=${version#v}
          echo "Setting package.json version to $version"
          jq --arg v "$version" '.version = $v' package.json > tmp.json && mv tmp.json package.json
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git commit -am "chore: update version in package.json to $version"
          git push

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.bump_version.outputs.new_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
